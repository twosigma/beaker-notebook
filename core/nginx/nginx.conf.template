worker_processes  4;
daemon off;
error_log  %(nginx_dir)s/logs/nginx.log error;
pid nginx.pid;

events {
  worker_connections  1024;
}

http {
  include mime.types;

  # turn this on for debugging
  #access_log %(nginx_dir)s/logs/access.log;
  access_log off;

  sendfile on;
  tcp_nopush on;

  # i tried setting to 0 and removing the keepalive timer from the ipython client.
  # but it did not fix the problem.
  #keepalive_timeout  0;
  keepalive_timeout  1000;

  proxy_connect_timeout   90;
  proxy_send_timeout      90;
  proxy_read_timeout      1000000;
  proxy_buffers           32 4k;
  client_max_body_size    100M;
  client_body_buffer_size 128k;
  client_body_temp_path   "client_temp";
  proxy_temp_path         "client_temp";
  fastcgi_temp_path       "client_temp";
  uwsgi_temp_path         "client_temp";
  scgi_temp_path          "client_temp";

  server {
    autoindex off;

    %(listen_section)s

    # redirect server error pages to the static page /50x.html and serve them directly from static html directory
    error_page   500 502 503 504  /static/50x.html;
    location /static/ {
      alias "%(static_dir)s/static/";
    }

    # in google chrome iframe do not inherit base tag and epiceditor uses iframes
    location = /beaker/vendor/epiceditor/themes/base/epiceditor.css {
        rewrite /beaker/vendor/epiceditor/themes/base/epiceditor.css /%(urlhash)s/beaker/vendor/epiceditor/themes/base/epiceditor.css;
    }
    location = /beaker/css/markdown-edit.css {
        rewrite /beaker/css/markdown-edit.css /%(urlhash)s/beaker/css/markdown-edit.css;
    }
    location = /beaker/css/markdown-preview.css {
        rewrite /beaker/css/markdown-preview.css /%(urlhash)s/beaker/css/markdown-preview.css;
    }
    location /beaker/fonts {
        rewrite /beaker/fonts/(.*) /%(urlhash)s/beaker/app/fonts/$1;
    }
    location /beaker/vendor/mathjax {
        rewrite /beaker/vendor/mathjax/(.*) /%(urlhash)s/beaker/vendor/mathjax/$1;
    }

    # login and loginrest are used for the public server option
    location /loginrest/ {
      proxy_pass http://127.0.0.1:%(port_beaker)s/rest/login/;
      proxy_set_header Authorization "Basic %(auth)s";
    }
    location /login/ {
      alias "%(static_dir)s/static/";
    }

    # redirect to the starting page
    location = / {
      return 301 %(start_page)s;
    }
    location = /beaker {
      return 301 %(start_page)s;
    }

    # this is the main beaker index page - auto generated via rest call
    location = /beaker/ {
      %(auth_cookie_rule)s
      proxy_pass http://127.0.0.1:%(port_beaker)s/rest/util/getMainPage;
      proxy_set_header Authorization "Basic %(auth)s";
    }
    location = /%(urlhash)s/beaker/ {
      return 301 %(start_page)s;
    }

    # this serves the actual (static) content
    location /%(urlhash)s/beaker/ {
      %(auth_cookie_rule)s
      rewrite ^/%(urlhash)s/beaker/(.*)$ /$1 break;
      root "%(static_dir)s/";
      try_files $uri @dopass;
    }

    # forward all other urls
    location @dopass {
      %(auth_cookie_rule)s
      proxy_pass http://127.0.0.1:%(port_beaker)s;
      proxy_set_header Authorization "Basic %(auth)s";
    }

    %(plugin_section)s
    %(extra_rules)s
  }
  server {
    listen 127.0.0.1:%(port_restart)s;

    location = /restart.%(restart_id)s/present.html {
      alias  "%(static_dir)s/static/present.html";
    }
  }
}
