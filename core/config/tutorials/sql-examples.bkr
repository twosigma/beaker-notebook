{
    "beaker": "2",
    "evaluators": [
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "SQL",
            "plugin": "SQL",
            "imports": "",
            "view": {
                "cm": {
                    "mode": "text/x-sql"
                }
            },
            "classPath": "",
            "datasorces": "",
            "outdir": "123",
            "defaultDatasource": "jdbc:h2:mem:db1"
        }
    ],
    "cells": [
        {
            "id": "sectionD3vV5U",
            "type": "section",
            "title": "SQL Examples",
            "level": 1,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdownIz9a7e",
            "type": "markdown",
            "body": [
                "[SQL](https://en.wikipedia.org/wiki/SQL) (Structured Query Language) is one of the oldest and most popular languages for database access.",
                "Beaker has first-class support for SQL, including syntax highlighting, autocompletion, and autotranslation.",
                "Most of the languages in Beaker have their own SQL APIs, and you can use them as well.",
                "",
                "In order to be completely self-contained, this demo notebook uses an in-memory [H2](www.h2database.com) database, and it's built from scratch",
                "automatically when the notebook is opened (see the last section).",
                "Normally you would connect to an existing database by putting its",
                "JDBC configuration in the \"Default data source\" field in the Language Manager.",
                "For example, if you want to connect to a [MySQL](https://www.mysql.com/) running locally then use:",
                "`jdbc:mysql://localhost/dbName`, where dbName would be replaced as appropriate.",
                "",
                "To connect to other datases, put the path to a JAR with its JDBC driver in the Class path, and enter an appropriate JDBC configuration as the data source.",
                "",
                "To connect to multiple databases in one notebook, see the section below."
            ],
            "evaluatorReader": false
        },
        {
            "id": "sectiongbsEYV",
            "type": "section",
            "title": "Basic Query",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "codef4U7zn",
            "type": "code",
            "evaluator": "SQL",
            "input": {
                "body": [
                    "SELECT * FROM color WHERE name LIKE 'A%';"
                ]
            },
            "output": {
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": 0,
                            "fixRight": 0
                        },
                        "columnNames": [
                            "ID",
                            "NAME",
                            "CODE"
                        ],
                        "actualalign": [
                            "L",
                            "L",
                            "L"
                        ],
                        "colorder": [
                            0,
                            1,
                            2,
                            3
                        ],
                        "getCellSho": [
                            true,
                            true,
                            true
                        ]
                    }
                },
                "selectedType": "Table",
                "pluginName": "SQL",
                "shellId": "49279164-af94-4460-871b-555d8f2443d6",
                "elapsedTime": 107,
                "result": {
                    "type": "TableDisplay",
                    "columnNames": [
                        "ID",
                        "NAME",
                        "CODE"
                    ],
                    "values": [
                        [
                            1001,
                            "AliceBlue",
                            "#F0F8FF"
                        ],
                        [
                            1002,
                            "AntiqueWhite",
                            "#FAEBD7"
                        ],
                        [
                            1003,
                            "Aqua",
                            "#00FFFF"
                        ],
                        [
                            1004,
                            "Aquamarine",
                            "#7FFFD4"
                        ],
                        [
                            1005,
                            "Azure",
                            "#F0FFFF"
                        ]
                    ],
                    "types": [
                        "java.lang.Integer",
                        "java.lang.String",
                        "java.lang.String"
                    ],
                    "subtype": "TableDisplay"
                },
                "height": 190
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "sectionIJrvTV",
            "type": "section",
            "title": "Autotranslate Input to Query",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdown69fca9",
            "type": "markdown",
            "body": [
                "Your query can be based on values computed elsewhere in the notebook"
            ],
            "evaluatorReader": false
        },
        {
            "id": "codeRXzfau",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "beaker.id = 1003"
                ]
            },
            "output": {
                "state": {},
                "result": 1003,
                "selectedType": "Text",
                "pluginName": "JavaScript",
                "elapsedTime": 29,
                "height": 36
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "code3jTM1a",
            "type": "code",
            "evaluator": "SQL",
            "input": {
                "body": [
                    "SELECT * FROM color WHERE id = ${id};"
                ]
            },
            "output": {
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": 0,
                            "fixRight": 0
                        },
                        "columnNames": [
                            "Key",
                            "Value"
                        ],
                        "actualalign": [
                            "L",
                            "L"
                        ],
                        "colorder": [
                            0,
                            1,
                            2
                        ],
                        "getCellSho": [
                            true,
                            true
                        ]
                    }
                },
                "result": {
                    "type": "TableDisplay",
                    "columnNames": [
                        "Key",
                        "Value"
                    ],
                    "values": [
                        [
                            "ID",
                            1003
                        ],
                        [
                            "NAME",
                            "Aqua"
                        ],
                        [
                            "CODE",
                            "#00FFFF"
                        ]
                    ],
                    "subtype": "Dictionary"
                },
                "selectedType": "Table",
                "pluginName": "SQL",
                "shellId": "49279164-af94-4460-871b-555d8f2443d6",
                "elapsedTime": 596,
                "height": 136
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "sectionRiHRgY",
            "type": "section",
            "title": "Autotranslate Output of Query",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "codeYmDlEC",
            "type": "code",
            "evaluator": "SQL",
            "input": {
                "body": [
                    "select * into ${colorTable} from color;"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Hidden",
                "pluginName": "SQL",
                "shellId": "de721528-3c4b-4364-91fc-5b8eff538567",
                "elapsedTime": 596
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeDbiIzh",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "beaker.colorTable"
                ]
            },
            "output": {
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": 0,
                            "fixRight": 0
                        },
                        "columnNames": [
                            "ID",
                            "NAME",
                            "CODE"
                        ],
                        "actualalign": [
                            "L",
                            "L",
                            "L"
                        ],
                        "colorder": [
                            0,
                            1,
                            2,
                            3
                        ],
                        "getCellSho": [
                            true,
                            true,
                            true
                        ]
                    }
                },
                "selectedType": "Table",
                "pluginName": "JavaScript",
                "elapsedTime": 22,
                "result": {
                    "type": "TableDisplay",
                    "subtype": "TableDisplay",
                    "hasIndex": "false",
                    "values": [
                        [
                            1001,
                            "AliceBlue",
                            "#F0F8FF"
                        ],
                        [
                            1002,
                            "AntiqueWhite",
                            "#FAEBD7"
                        ],
                        [
                            1003,
                            "Aqua",
                            "#00FFFF"
                        ],
                        [
                            1004,
                            "Aquamarine",
                            "#7FFFD4"
                        ],
                        [
                            1005,
                            "Azure",
                            "#F0FFFF"
                        ],
                        [
                            1006,
                            "Beige",
                            "#F5F5DC"
                        ],
                        [
                            1007,
                            "Bisque",
                            "#FFE4C4"
                        ],
                        [
                            1008,
                            "Black",
                            "#000000"
                        ]
                    ],
                    "types": [
                        "java.lang.Integer",
                        "java.lang.String",
                        "java.lang.String"
                    ],
                    "columnNames": [
                        "ID",
                        "NAME",
                        "CODE"
                    ]
                },
                "height": 271
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "sectionydyDbr",
            "type": "section",
            "title": "Multiple Databases",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdownt4b9jx",
            "type": "markdown",
            "body": [
                "You can specify a different database for a cell to connect to by putting `%%beakerDB=\"....\"` on the first line."
            ],
            "evaluatorReader": false
        },
        {
            "id": "code506tI8",
            "type": "code",
            "evaluator": "SQL",
            "input": {
                "body": [
                    "%%beakerDB=\"jdbc:h2:mem:people\"",
                    "SELECT * FROM people;"
                ]
            },
            "output": {
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": 0,
                            "fixRight": 0
                        },
                        "columnNames": [
                            "NAME",
                            "BORN"
                        ],
                        "actualalign": [
                            "L",
                            "L"
                        ],
                        "colorder": [
                            0,
                            1,
                            2
                        ],
                        "getCellSho": [
                            true,
                            true
                        ]
                    }
                },
                "result": {
                    "type": "TableDisplay",
                    "columnNames": [
                        "NAME",
                        "BORN"
                    ],
                    "values": [
                        [
                            "Jacob Berzelius",
                            1779
                        ],
                        [
                            "Robert Boyle",
                            1627
                        ],
                        [
                            "John Dalton",
                            1766
                        ],
                        [
                            "Antoine Lavoisier",
                            1743
                        ]
                    ],
                    "types": [
                        "java.lang.String",
                        "java.lang.Integer"
                    ],
                    "subtype": "TableDisplay"
                },
                "selectedType": "Table",
                "pluginName": "SQL",
                "shellId": "de721528-3c4b-4364-91fc-5b8eff538567",
                "elapsedTime": 108,
                "height": 163
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "section5arlN2",
            "type": "section",
            "title": "Initialize the Databases",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": true
        },
        {
            "id": "markdownLWlLbm",
            "type": "markdown",
            "body": [
                "This section is run automatically when the notebook is opened.  It creates a test database and adds some test records and tables to it."
            ],
            "evaluatorReader": false
        },
        {
            "id": "code1XuTjx",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "beaker.colorsArray = [",
                    "  {name: 'AliceBlue', code: '#F0F8FF'},",
                    "  {name: 'AntiqueWhite', code: '#FAEBD7' },",
                    "  {name: 'Aqua', code: '#00FFFF'},",
                    "  {name: 'Aquamarine', code: '#7FFFD4'},",
                    "  {name: 'Azure', code: '#F0FFFF'},",
                    "  {name: 'Beige', code: '#F5F5DC'},",
                    "  {name: 'Bisque', code: '#FFE4C4'},",
                    "  {name: 'Black', code: '#000000'}];",
                    "beaker.idArray = [1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008];"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Text",
                "pluginName": "JavaScript",
                "elapsedTime": 24,
                "hidden": true,
                "result": [
                    1001,
                    1002,
                    1003,
                    1004,
                    1005,
                    1006,
                    1007,
                    1008
                ],
                "height": 0
            },
            "evaluatorReader": true,
            "lineCount": 10,
            "initialization": true
        },
        {
            "id": "codeKwTSKL",
            "type": "code",
            "evaluator": "SQL",
            "input": {
                "body": [
                    "drop table if exists color;",
                    "CREATE TABLE color (",
                    "  id int(11) NOT NULL,",
                    "  name varchar(45) NOT NULL,",
                    "  code varchar(10),",
                    "  PRIMARY KEY (id)",
                    ");",
                    "",
                    "INSERT INTO color VALUES (${idArray[*]}, ${colorsArray[*].name}, ${colorsArray[*].code});"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Hidden",
                "pluginName": "SQL",
                "shellId": "de721528-3c4b-4364-91fc-5b8eff538567",
                "elapsedTime": 677
            },
            "evaluatorReader": true,
            "lineCount": 9,
            "initialization": true
        },
        {
            "id": "codesr78kX",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "beaker.peopleArray = [",
                    "  {name: 'Jacob Berzelius', born: 1779},",
                    "  {name: 'Robert Boyle', born: 1627},",
                    "  {name: 'John Dalton', born: 1766},",
                    "  {name: 'Antoine Lavoisier', born: 1743}];"
                ]
            },
            "output": {
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": 0,
                            "fixRight": 0
                        },
                        "columnNames": [
                            "name",
                            "born"
                        ],
                        "actualalign": [
                            "L",
                            "R"
                        ],
                        "colorder": [
                            0,
                            1,
                            2
                        ],
                        "getCellSho": [
                            true,
                            true
                        ]
                    }
                },
                "result": {
                    "type": "TableDisplay",
                    "subtype": "ListOfMaps",
                    "columnNames": [
                        "name",
                        "born"
                    ],
                    "values": [
                        [
                            "Jacob Berzelius",
                            1779
                        ],
                        [
                            "Robert Boyle",
                            1627
                        ],
                        [
                            "John Dalton",
                            1766
                        ],
                        [
                            "Antoine Lavoisier",
                            1743
                        ]
                    ],
                    "types": [
                        "string",
                        "double"
                    ]
                },
                "selectedType": "Table",
                "pluginName": "JavaScript",
                "elapsedTime": 23,
                "height": 0
            },
            "evaluatorReader": true,
            "lineCount": 5,
            "initialization": true
        },
        {
            "id": "codekSoDPZ",
            "type": "code",
            "evaluator": "SQL",
            "input": {
                "body": [
                    "%%beakerDB=\"jdbc:h2:mem:people\"",
                    "drop table if exists people;",
                    "CREATE TABLE people (",
                    "  name varchar(45) NOT NULL,",
                    "  born int(4),",
                    "  PRIMARY KEY (name)",
                    ");",
                    "",
                    "INSERT INTO people VALUES (${peopleArray[*].name}, ${peopleArray[*].born});"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Hidden",
                "pluginName": "SQL",
                "shellId": "de721528-3c4b-4364-91fc-5b8eff538567",
                "elapsedTime": 618
            },
            "evaluatorReader": true,
            "lineCount": 9,
            "initialization": true
        }
    ],
    "namespace": {
        "rtable": {
            "type": "TableDisplay",
            "values": [
                [
                    "zip",
                    1036
                ],
                [
                    "state",
                    "MA"
                ],
                [
                    "city",
                    "Hampden"
                ],
                [
                    "lat",
                    42.064756
                ],
                [
                    "lng",
                    -72.431823
                ]
            ],
            "subtype": "Dictionary",
            "columnNames": [
                "Key",
                "Value"
            ]
        },
        "rtable2": {
            "type": "TableDisplay",
            "values": [
                [
                    "zip",
                    1036
                ],
                [
                    "state",
                    "MA"
                ],
                [
                    "city",
                    "Hampden"
                ],
                [
                    "lat",
                    42.064756
                ],
                [
                    "lng",
                    -72.431823
                ]
            ],
            "subtype": "Dictionary",
            "columnNames": [
                "Key",
                "Value"
            ]
        },
        "bkt1": {
            "type": "TableDisplay",
            "columnNames": [
                "Key",
                "Value"
            ],
            "values": [
                [
                    "zip",
                    1036
                ],
                [
                    "state",
                    "MA"
                ],
                [
                    "city",
                    "Hampden"
                ],
                [
                    "lat",
                    42.064756
                ],
                [
                    "lng",
                    -72.431823
                ]
            ],
            "subtype": "Dictionary"
        },
        "bkt2": {
            "type": "TableDisplay",
            "columnNames": [
                "zip",
                "city"
            ],
            "values": [
                [
                    1068,
                    "Oakham"
                ],
                [
                    1069,
                    "Palmer"
                ],
                [
                    1070,
                    "Plainfield"
                ],
                [
                    1071,
                    "Russell"
                ],
                [
                    1072,
                    "Shutesbury"
                ],
                [
                    1073,
                    "Southampton"
                ],
                [
                    1075,
                    "South Hadley"
                ],
                [
                    1077,
                    "Southwick"
                ],
                [
                    1080,
                    "Three Rivers"
                ],
                [
                    1081,
                    "Wales"
                ]
            ],
            "types": [
                "java.lang.Integer",
                "java.lang.String"
            ],
            "subtype": "TableDisplay"
        },
        "ttt": 222,
        "ttt1": 10009,
        "cid": 111,
        "cname": "NewYork",
        "cdate": {
            "type": "Date",
            "timestamp": 1443377285008
        },
        "city": {
            "type": "TableDisplay",
            "values": [
                [
                    "cid",
                    112
                ],
                [
                    "cname",
                    "New York"
                ]
            ],
            "subtype": "Dictionary",
            "columnNames": [
                "Key",
                "Value"
            ]
        },
        "states": [
            "VT",
            "AL",
            "NY",
            "IN",
            "IL"
        ],
        "cities": {
            "type": "TableDisplay",
            "subtype": "ListOfMaps",
            "columnNames": [
                "cid",
                "cname"
            ],
            "values": [
                [
                    113,
                    "York"
                ],
                [
                    114,
                    "Yorkville"
                ]
            ],
            "types": [
                "double",
                "string"
            ]
        },
        "colorsArray": {
            "type": "TableDisplay",
            "subtype": "ListOfMaps",
            "columnNames": [
                "name",
                "code"
            ],
            "values": [
                [
                    "AliceBlue",
                    "#F0F8FF"
                ],
                [
                    "AntiqueWhite",
                    "#FAEBD7"
                ],
                [
                    "Aqua",
                    "#00FFFF"
                ],
                [
                    "Aquamarine",
                    "#7FFFD4"
                ],
                [
                    "Azure",
                    "#F0FFFF"
                ],
                [
                    "Beige",
                    "#F5F5DC"
                ],
                [
                    "Bisque",
                    "#FFE4C4"
                ],
                [
                    "Black",
                    "#000000"
                ]
            ],
            "types": [
                "string",
                "string"
            ]
        },
        "idArray": [
            1001,
            1002,
            1003,
            1004,
            1005,
            1006,
            1007,
            1008
        ],
        "colorTable": {
            "type": "TableDisplay",
            "subtype": "TableDisplay",
            "hasIndex": "false",
            "values": [
                [
                    1001,
                    "AliceBlue",
                    "#F0F8FF"
                ],
                [
                    1002,
                    "AntiqueWhite",
                    "#FAEBD7"
                ],
                [
                    1003,
                    "Aqua",
                    "#00FFFF"
                ],
                [
                    1004,
                    "Aquamarine",
                    "#7FFFD4"
                ],
                [
                    1005,
                    "Azure",
                    "#F0FFFF"
                ],
                [
                    1006,
                    "Beige",
                    "#F5F5DC"
                ],
                [
                    1007,
                    "Bisque",
                    "#FFE4C4"
                ],
                [
                    1008,
                    "Black",
                    "#000000"
                ]
            ],
            "types": [
                "java.lang.Integer",
                "java.lang.String",
                "java.lang.String"
            ],
            "columnNames": [
                "ID",
                "NAME",
                "CODE"
            ]
        },
        "mysqlds": "jdbc:mysql://localhost:3306/test?user=root&password=root",
        "H2MemDB2": "jdbc:h2:mem:db1",
        "size": [
            145,
            277
        ],
        "id": 1003,
        "peopleArray": {
            "type": "TableDisplay",
            "subtype": "ListOfMaps",
            "columnNames": [
                "name",
                "born"
            ],
            "values": [
                [
                    "Jacob Berzelius",
                    1779
                ],
                [
                    "Robert Boyle",
                    1627
                ],
                [
                    "John Dalton",
                    1766
                ],
                [
                    "Antoine Lavoisier",
                    1743
                ]
            ],
            "types": [
                "string",
                "double"
            ]
        }
    },
    "metadata": {
        "publication-id": "560b4a2f-546b-4929-acd7-0d47365b896e"
    }
}
