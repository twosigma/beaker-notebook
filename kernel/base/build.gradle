/*
 *  Copyright 2017 TWO SIGMA OPEN SOURCE, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
apply plugin: 'java'
apply plugin: 'maven-publish'

repositories {
  mavenCentral()
}


compileJava {
  options.compilerArgs << '-XDignore.symbol.file'
  options.fork = true
}

dependencies {

  compile group: "org.zeromq", name: "jeromq", version : "0.3.5"
  compile group: "commons-codec", name: "commons-codec", version : "1.9"
  compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.22'
  compile group: 'com.github.lwhite1', name:'tablesaw', version: '0.7.6.4'
  compile group: 'com.google.inject', name: 'guice', version: '3.0'
  compile 'com.google.guava:guava:19.0'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.7.5'
  compile 'org.apache.commons:commons-lang3:3.3.2'

  testCompile group: 'junit', name: 'junit', version: '4.11'
  testCompile group: 'org.assertj', name: 'assertj-core', version: '3.6.1'
  testCompile group: 'org.reflections', name: 'reflections', version: '0.9.10'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.twosigma'
            artifactId 'beaker-kernel-base'
            version '2.0-SNAPSHOT'

            from components.java
        }
    }
}

def gitDescribe() {
  def name = "git describe --all".execute().text.trim()
  if (name.startsWith('heads/')) {
    name = name.substring(6)
  }
  return name
}

def gitGetHash() {
  def name = "git log --pretty=format:%h -n 1".execute().text.trim()
  return name
}

def resourceDir = file("./src/main/resources")

task prepareBuildVerion() {
  doLast {
    new File(resourceDir, 'version').write(gitDescribe())
    new File(resourceDir, 'hash').write(gitGetHash())
    new File(resourceDir, 'build_time').write(new Date().format("yyyy-MM-dd HH:mm z"))
  }
}

test {
    systemProperties 'java.awt.headless': "true"
}

compileJava.dependsOn prepareBuildVerion
