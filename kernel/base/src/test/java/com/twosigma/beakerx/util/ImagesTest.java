/*
 *  Copyright 2018 TWO SIGMA OPEN SOURCE, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.twosigma.beakerx.util;

import java.awt.image.BufferedImage;
import java.io.IOException;

import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;

/**
 * Tests {@link Images}.
 */
public class ImagesTest {

  @Test
  public void testRoundTrip() throws IOException {
    byte[] happyFace = {
      -0x77, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
      0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07,
      0x08, 0x02, 0x00, 0x00, 0x00, 0x4b, 0x30, -0x40, -0x7c, 0x00, 0x00, 0x00,
      0x3d, 0x49, 0x44, 0x41, 0x54, 0x78, -0x26, 0x63, 0x60, 0x60, 0x60, 0x50,
      0x51, 0x51, -0x0f, -0x0c, -0x0c, -0x34, -0x33, -0x33, -0x63, 0x34, 0x69,
      -0x2e, -0x4a, 0x6d, -0x25, 0x6e, -0x21, -0x42, -0x33, 0x00, 0x11, 0x65,
      -0x68, -0x50, 0x13, 0x28, 0x0a, 0x24, -0x77, 0x10, -0x3b, 0x62, 0x42,
      0x2c, 0x33, 0x03, 0x5c, 0x14, -0x38, -0x3a, 0x2b, 0x0a, 0x34, 0x01, -0x38,
      -0x7f, 0x20, -0x78, 0x09, 0x00, 0x46, 0x2a, 0x38, 0x70, -0x7d, 0x64, 0x48,
      0x7a, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, -0x52, 0x42, 0x60,
      -0x7e
    };
    BufferedImage bi = Images.decode(happyFace);
    assertEquals(7, bi.getWidth());
    assertEquals(7, bi.getHeight());
    assertEquals(0xFF0090b9, bi.getRGB(2, 1));
    assertEquals(0xFF5d0300, bi.getRGB(5, 5));
    byte[] reencoded = Images.encode(bi);
    assertArrayEquals(happyFace, reencoded);
  }
}
