/*
 *  Copyright 2017 TWO SIGMA OPEN SOURCE, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'maven-publish'

ext.kernelIdName = 'scala'
mainClassName = 'com.twosigma.beakerx.scala.kernel.Scala'

configurations {
  provided
  antlr
}

//need for compiling scala before java
sourceSets {
  main {
    compileClasspath += configurations.provided
    scala {
      srcDirs = ['src/main/scala', 'src/main/java']
    }
    java {
      srcDirs = []
    }
  }
  test {
    compileClasspath += configurations.provided
    runtimeClasspath += configurations.provided
  }
}

repositories {
  mavenCentral()
}

dependencies {
  provided project(':base')
  compile group: 'org.scala-lang', name: 'scala-compiler', version: '2.11.11'
  compile group: 'org.scala-lang', name: 'scala-library', version: '2.11.11'
  compile group: 'jline', name: 'jline', version: '2.12'

  testCompile project(':base').sourceSets.test.output
}

jar {
  manifest {
    attributes "Main-Class": "$mainClassName"
  }
}

task realclean
realclean.dependsOn(clean)
// should also remove
// GroovyLexer.java GroovyLexer.tokens GroovyParser.java GroovyParser.tokens
// GroovyParserBaseListener.java GroovyParserListener.java

publishing {
  publications {
    maven(MavenPublication) {
      groupId 'com.twosigma'
      artifactId 'beaker-kernel-scala'
      version '2.0-SNAPSHOT'

      from components.java
    }
  }
}

task copyDependencies(type: Copy) {
  from configurations.runtime
  from jar
  into new File(getPathToLib(kernelIdName))
}

jar.finalizedBy copyDependencies
