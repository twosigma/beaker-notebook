/*
 *  Copyright 2014 TWO SIGMA OPEN SOURCE, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
apply plugin: 'java'

repositories {
  mavenCentral()
}

configurations {
  provided
  compile.extendsFrom provided
}

dependencies {
  provided group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.3.8.v20160314'
  provided group: 'org.eclipse.jetty', name: 'jetty-proxy', version: '9.3.8.v20160314'
  provided group: 'org.eclipse.jetty', name: 'jetty-util', version: '9.3.8.v20160314'
  compile group: 'org.eclipse.jetty.websocket', name: 'javax-websocket-server-impl', version: '9.3.8.v20160314'
  runtime group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.6'
  provided group: 'com.google.guava', name: 'guava', version: '18.0'
  provided group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.1'
  provided group: 'com.sun.jersey', name: 'jersey-servlet', version: '1.19'
  provided group: 'com.sun.jersey', name: 'jersey-server', version: '1.19'
  provided group: 'com.sun.jersey', name: 'jersey-core', version: '1.19'
  provided project(':shared')
}



task generateJavadoc(type: Javadoc) {
  source = sourceSets.main.allJava
  failOnError = false
  destinationDir = file("./build/docs/")

  include "com/twosigma/beaker/easyform/formitem/**.java"
  include "com/twosigma/beaker/easyform/EasyForm.java"
  include "com/twosigma/beaker/easyform/EasyFormComponent.java"
  include "com/twosigma/beaker/easyform/EasyFormObjectManager.java"

  include "com/twosigma/beaker/chart/**/**.java"
  exclude "com/twosigma/beaker/chart/serializer/*"

  include "com/twosigma/beaker/jvm/object/OutputContainer.java"
  include "com/twosigma/beaker/jvm/object/DashboardLayoutManager.java"
  include "com/twosigma/beaker/jvm/object/GridOutputContainerLayoutManager.java"
  include "com/twosigma/beaker/jvm/object/OutputContainerCell.java"
  include "com/twosigma/beaker/jvm/object/OutputCell.java"
  include "com/twosigma/beaker/jvm/object/OutputContainerLayoutManager.java"
  include "com/twosigma/beaker/jvm/object/SimpleLayoutManager.java"
  include "com/twosigma/beaker/jvm/object/TabbedOutputContainerLayoutManager.java"
  include "com/twosigma/beaker/jvm/object/CyclingOutputContainerLayoutManager.java"

  include "net/sf/jtreemap/swing/**.java"

  configure(options) {
    windowTitle = 'API Documentation'
    docTitle = "API Documentation"
    bottom = "Copyright 2014 TWO SIGMA OPEN SOURCE, LLC"
    noTimestamp = true
  }
}



task addFavicon2Javadoc {

  doLast{

    def collection = files('./build/docs/index.html')
    collection.each {File file ->
      def updatedContent = new File(file.path).getText('UTF-8').replaceAll("<html lang=\"en\">\n<head>",
        "<html lang=\"en\">\n<link href=\"../../../static/favicon.png\" rel=\"shortcut icon\" type=\"image/x-icon\" />\n<head>")
      new File(file.path).write(updatedContent, 'UTF-8')
    }

    copy {
      from './build/docs/'
      into '../../core/src/main/web/app/dist/docs/'
    }
  }
}



compileJava {
  options.compilerArgs << '-Xlint:deprecation'
  options.compilerArgs << '-Xlint:unchecked'
}

task installDist {
  // do nothing, this is a library
}

if (hasProperty('includeDepsInJar')) {
  build.dependsOn jar
  jar {
    // need to remove META-INF/*.SF to use this.
    from {
       (configurations.compile - configurations.provided).collect { it.isDirectory() ? it : zipTree(it).matching{exclude{it.path.contains('META-INF')} } }
    } {
      exclude "META-INF/*.SF"
      exclude "META-INF/*.DSA"
      exclude "META-INF/*.RSA"
    }
  }
}

addFavicon2Javadoc.dependsOn(generateJavadoc)

installDist.dependsOn(addFavicon2Javadoc)

task realclean
realclean.dependsOn(clean)
