/*
 *  Copyright 2014 TWO SIGMA OPEN SOURCE, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
apply plugin: 'java'

repositories {
  mavenCentral()
}

apply plugin:'application'
mainClassName = 'com.twosigma.beaker.sqlsh.Main'

configurations {
  provided
  antlr
  compile.extendsFrom provided
}

dependencies {
  compile group: 'org.owasp.esapi', name: 'esapi', version: '2.1.0.1'
  compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.5'
  antlr group : 'org.antlr', name :'antlr4', version: '4.5'
  provided project(':plugin:jvm')
  compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.1.1'
  /*
   *  http://www.mysql.com/about/legal/licensing/foss-exception/
   */
  runtime group: 'mysql', name: 'mysql-connector-java',  version: '5.1.29'
  runtime group: 'com.h2database', name: 'h2', version: '1.4.189'
  runtime group: 'org.postgresql', name: 'postgresql', version: '9.4.1208'
  compile group: 'net.sourceforge.jtds', name: 'jtds', version: '1.3.1'
}


compileJava {
  options.compilerArgs << '-Xlint:deprecation'
  options.compilerArgs << '-Xlint:unchecked'
}

if (hasProperty('evalPluginDir')) {
  installDist.into new File(evalPluginDir, 'sqlsh')
}

if (hasProperty('includeDepsInJar')) {
  build.dependsOn jar
  jar {
    // need to remove META-INF/*.SF to use this.
    from {
       (configurations.compile - configurations.provided).collect { it.isDirectory() ? it : zipTree(it).matching{exclude{it.path.contains('META-INF') || it.path.contains('google')} } }
    } {
      exclude "META-INF/*.SF"
      exclude "META-INF/*.DSA"
      exclude "META-INF/*.RSA"
    }
  }
}

startScripts {
  defaultJvmOpts=['-Djava.awt.headless=' + 'true']
  doLast {
    // Remove too-long-classpath and use wildcard ( works for java 6 and above only)
    windowsScript.text = windowsScript.text.replaceAll('set CLASSPATH=.*', 'set CLASSPATH=.;%APP_HOME%/lib/*')
  }
}

task realclean
realclean.dependsOn(clean)
// should also remove 
// Java.tokens JavaBaseListener.java JavaLexer.java JavaLexer.tokens JavaListener.java JavaParser.java       
